plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "de.mannodermaus.android-junit5"
    id "kotlin-parcelize"
}

android {
    compileSdk 30

    defaultConfig {
        applicationId "br.com.jxr.composemovies"
        minSdk 26
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField("String", "TmdbApiKey", TheMovieDBAPIKey)
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_version
        kotlinCompilerVersion '1.5.21'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.3.1'
    implementation "io.coil-kt:coil-compose:1.3.2"
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.squareup.retrofit2:converter-moshi:2.9.0'
    implementation "com.squareup.moshi:moshi:1.12.0"
    implementation "com.squareup.moshi:moshi-kotlin:1.12.0"

//    const val okHttp = "com.squareup.okhttp3:okhttp:${Versions.okHttp}"

    // Koin main features for Android (Scope,ViewModel ...)
    implementation "io.insert-koin:koin-android:$koin_version"
    // Koin Java Compatibility
    implementation "io.insert-koin:koin-android-compat:$koin_version"
    // Koin for Jetpack WorkManager
    implementation "io.insert-koin:koin-androidx-workmanager:$koin_version"
    // Koin for Jetpack Compose
    implementation "io.insert-koin:koin-androidx-compose:$koin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines"

    // (Required) Writing and executing Unit Tests on the JUnit Platform
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"

    // (Optional) If you need "Parameterized Tests"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junit_version"
    testImplementation "io.insert-koin:koin-test-junit5:$koin_version"
    testImplementation "io.mockk:mockk:1.12.0"
    // testImplementation for pure JVM unit tests
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    testImplementation "io.kotest:kotest-assertions-core:4.3.1"
    testImplementation 'junit:junit:4.13.2'

    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    androidTestImplementation "io.mockk:mockk:1.12.0"
    androidTestImplementation "io.kotest:kotest-assertions-core:4.3.1"
    // androidTestImplementation for Android instrumentation tests
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
}
